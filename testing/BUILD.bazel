load("@rules_gz//gz:headers.bzl", "gz_include_header", "gz_export_header")
load("@rules_license//rules:license.bzl", "license")

package(
    default_applicable_licenses = ["//:license"],
)

public_headers_no_gen = glob([
    "include/gz/common/testing/*.hh",
    "include/gz/common/testing/detail/*.hh",
])

gz_export_header(
    name = "include/gz/common/testing/Export.hh",
    export_base = "GZ_COMMON_TESTING",
    lib_name = "gz-common",
    visibility = ["//visibility:private"],
)

public_headers = public_headers_no_gen + [
  "include/gz/common/testing/Export.hh"
]

gz_include_header(
    name = "testing_hh_genrule",
    out = "include/gz/common/testing.hh",
    hdrs = public_headers,
)

cc_library(
    name = "testing",
    srcs = [
      "src/BazelTestPaths.cc",
      "src/CMakeTestPaths.cc",
      "src/RedirectConsoleStream.cc",
      "src/TestPaths.cc",
      "src/Utils.cc"
    ],
    hdrs = public_headers + [
        "include/gz/common/testing.hh",
    ],
    includes = ["include"],
    deps = [
        "//:gz-common",
    ],
    visibility = ["//visibility:public"]
)

cc_test(
  name = "AutoLogFixture_TEST",
  srcs = [
    "src/AutoLogFixture_TEST.cc",
  ],
  deps = [
    "@googletest//:gtest_main",
    ":testing",
  ]
)

cc_test(
  name = "BazelTestPaths_TEST",
  srcs = [
    "src/BazelTestPaths_TEST.cc",
  ],
  data = ["test_files"],
  deps = [
    "@googletest//:gtest_main",
    ":testing",
  ]
)

cc_test(
  name = "RedirectConsoleStream_TEST",
  srcs = [
    "src/RedirectConsoleStream_TEST.cc",
  ],
  deps = [
    "@googletest//:gtest_main",
    ":testing",
  ]
)
