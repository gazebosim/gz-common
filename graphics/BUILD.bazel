load(
    "//ign_bazel:build_defs.bzl",
    "IGNITION_ROOT",
    "IGNITION_VISIBILITY",
    "generate_include_header",
    "ign_export_header",
)

package(
    default_visibility = IGNITION_VISIBILITY,
    features = [
        "-parse_headers",
        "-layering_check",
    ],
)

public_headers_no_gen = glob([
    "include/ignition/common/*.hh",
    "include/ignition/common/graphics/*.hh"
])

sources = glob(["src/*.cc"], exclude=["src/*_TEST.cc"])

test_sources = glob(["src/*_TEST.cc"])

ign_export_header(
    name = "include/ignition/common/graphics/Export.hh",
    export_base = "IGNITION_COMMON_GRAPHICS",
    lib_name = "ignition-common-graphics",
    visibility = ["//visibility:private"],
)

generate_include_header(
    name = "graphics_hh_genrule",
    out = "include/ignition/common/graphics.hh",
    hdrs = public_headers_no_gen + [
        "include/ignition/common/graphics/Export.hh",
    ],
)

public_headers = public_headers_no_gen + [
    "include/ignition/common/graphics/Export.hh",
    "include/ignition/common/graphics.hh",
    "src/tiny_obj_loader.h",
]

cc_library(
    name = "graphics",
    srcs = sources,
    hdrs = public_headers,
    includes = ["include"],
    deps = [
        "@freeimage",
        "@glib",
        "@gts",
        "@tinyxml2",
        IGNITION_ROOT + "ign_common",
    ],
)

cc_binary(
    name = "libignition-common3-graphics.so",
    includes = ["include"],
    linkopts = ["-Wl,-soname,libignition-common3-graphics.so"],
    linkshared = True,
    deps = [":graphics"],
)

[cc_test(
    name = src.replace("/", "_").replace(".cc", "").replace("src_", ""),
    srcs = [src],
    data = [
        IGNITION_ROOT + "ign_common/test:data",
    ],
    deps = [
        ":graphics",
        IGNITION_ROOT + "ign_common/test:test_utils",
        "@gtest",
        "@gtest//:gtest_main",
    ],
) for src in test_sources]
