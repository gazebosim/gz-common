load(
    "@gz//bazel/skylark:build_defs.bzl",
    "GZ_FEATURES",
    "GZ_ROOT",
    "GZ_VISIBILITY",
    "gz_export_header",
    "gz_include_header",
)
load(
    "@gz//bazel/lint:lint.bzl",
    "add_lint_tests",
)

package(
    default_applicable_licenses = [GZ_ROOT + "common:license"],
    features = GZ_FEATURES,
)

public_headers_no_gen = glob([
    "include/gz/common/*.hh",
    "include/gz/common/**/*.hh",
])

private_headers = glob(["src/VHACD/*.h"])

sources = glob(
    ["src/*.cc"],
    exclude = ["src/*_TEST.cc"],
)

test_sources = glob(["src/*_TEST.cc"])

gz_export_header(
    name = "include/gz/common/graphics/Export.hh",
    export_base = "GZ_COMMON_GRAPHICS",
    lib_name = "gz-common-graphics",
    visibility = ["//visibility:private"],
)

gz_include_header(
    name = "graphics_hh_genrule",
    out = "include/gz/common/graphics.hh",
    hdrs = public_headers_no_gen + [
        "include/gz/common/graphics/Export.hh",
    ],
)

public_headers = public_headers_no_gen + [
    "include/gz/common/graphics/Export.hh",
    "include/gz/common/graphics.hh",
    "src/tiny_obj_loader.h",
]

cc_library(
    name = "graphics",
    srcs = sources + private_headers,
    hdrs = public_headers,
    copts = [
        "-Wno-implicit-fallthrough",
        "-Wno-unused-value",
    ],
    includes = ["include"],
    visibility = GZ_VISIBILITY,
    deps = [
        "@assimp",
        "@freeimage",
        "@glib",
        "@gts",
        "@tinyxml2",
        GZ_ROOT + "common",
        GZ_ROOT + "utils",
    ],
)

[cc_test(
    name = src.replace("/", "_").replace(".cc", "").replace("src_", ""),
    srcs = [src],
    data = [GZ_ROOT + "common/test:data"],
    env = {
        "GZ_BAZEL": "1",
        "GZ_BAZEL_PATH": "common",
    },
    deps = [
        ":graphics",
        GZ_ROOT + "common/testing",
        "@gtest//:gtest_main",
    ],
) for src in test_sources]

add_lint_tests()
