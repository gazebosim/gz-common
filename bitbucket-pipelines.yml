image: ubuntu:bionic

options:
  max-time: 20

pipelines:
  default:
    - step:
        script:
          - apt-get update
          - apt-get -y install
            cmake pkg-config python ruby-ronn uuid-dev
            libavcodec-dev libavdevice-dev libavformat-dev libavutil-dev
            libfreeimage-dev libgts-dev libswscale-dev libtinyxml2-dev
            curl git cppcheck g++-8
          - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8 --slave /usr/bin/gcov gcov /usr/bin/gcov-8
          - gcc -v
          - g++ -v
          - gcov -v
          # lcov
          - git clone https://github.com/linux-test-project/lcov.git
          - cd lcov
          # lcov was broken briefly (see https://github.com/linux-test-project/lcov/issues/55 )
          # checkout an explicit commit to avoid future regressions
          - git checkout 04335632c371b5066e722298c9f8c6f11b210201
          - make install
          - cd ..

          # Ignition dependencies
          - echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable bionic main" > /etc/apt/sources.list.d/gazebo-stable.list
          - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys D2486D2DD83DB69272AFE98867170598AF249743
          - apt-get update
          - apt-get -y install
            libignition-cmake2-dev
            libignition-math6-dev
          # Ignition cmake (uncomment to build from a specific branch)
          # - git clone http://github.com/ignitionrobotics/ign-cmake -b gz11
          # - cd ign-cmake
          # - mkdir build
          # - cd build
          # - cmake .. -DBUILD_TESTING=OFF
          # - make -j4 install
          # - cd ../..
          # Ignition math (uncomment to build from a specific branch)
          # - git clone http://github.com/ignitionrobotics/ign-math -b gz11
          # - cd ign-math
          # - mkdir build
          # - cd build
          # - cmake .. -DBUILD_TESTING=OFF
          # - make -j4 install
          # - cd ../..
          # Build
          - mkdir build
          - cd build
          - cmake .. -DCMAKE_BUILD_TYPE=coverage
          - make
          # Tests
          - make test
          - make install
          # Coverage
          - make coverage
          # Use a special version of codecov for handling gcc8 output.
          - bash <(curl -s https://raw.githubusercontent.com/codecov/codecov-bash/4678d212cce2078bbaaf5027af0c0dafaad6a095/codecov) -X gcovout -X gcov
          - make codecheck
          # Examples
          - cd ../examples
          - mkdir build
          - cd build
          - cmake ..
          - make
